#include <ESP8266WiFi.h>
#include <DHT.h>
#include <TinyGPS++.h>

// Replace with your network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Server address (Replace with your server URL or IP)
const char* serverUrl = "http://your-server-address.com/data";

// DHT11 Sensor Setup
#define DHTPIN 2
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// GPS Setup
#define RXPin 3
#define TXPin 4
TinyGPSPlus gps;
SoftwareSerial ss(RXPin, TXPin);

// WiFi client
WiFiClient client;

void setup() {
  Serial.begin(9600);
  
  // Start the DHT sensor
  dht.begin();
  
  // Start the GPS
  ss.begin(9600);
  
  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi...");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }
  Serial.println("Connected to WiFi!");
}

void loop() {
  // Collect data from DHT11
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Collect GPS data
  while (ss.available() > 0) {
    gps.encode(ss.read());
  }

  if (gps.location.isValid()) {
    float latitude = gps.location.lat();
    float longitude = gps.location.lng();
    
    // Construct the JSON payload
    String jsonData = "{\"temperature\": " + String(temperature) + 
                      ", \"humidity\": " + String(humidity) +
                      ", \"latitude\": " + String(latitude) +
                      ", \"longitude\": " + String(longitude) + "}";
    
    // Send the data to the server
    if (client.connect(serverUrl, 80)) {
      client.println("POST /data HTTP/1.1");
      client.println("Host: your-server-address.com");
      client.println("Content-Type: application/json");
      client.println("Connection: close");
      client.print("Content-Length: ");
      client.println(jsonData.length());
      client.println();
      client.println(jsonData);
      
      // Wait for server response
      while (client.available()) {
        String line = client.readStringUntil('\r');
        Serial.print(line);
      }

      client.stop();
    }
  }
  
  delay(5000);  // Send data every 5 seconds
}
