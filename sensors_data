#include <DHT.h>
#include <TinyGPS++.h>
#include <SoftwareSerial.h>

// Define the pin where the DHT11 is connected
#define DHTPIN 2  // Digital pin connected to the DHT11
#define DHTTYPE DHT11

// Define sensor pins
#define SOIL_MOISTURE_PIN A0  // Analog pin connected to soil moisture sensor
#define PH_SENSOR_PIN A1      // Analog pin connected to pH sensor

// GPS Module pins
#define RXPin 3   // RX pin for GPS module (connected to TX of GPS)
#define TXPin 4   // TX pin for GPS module (connected to RX of GPS)
#define GPSBaud 9600

// Initialize DHT sensor
DHT dht(DHTPIN, DHTTYPE);

// Initialize GPS
TinyGPSPlus gps;
SoftwareSerial ss(RXPin, TXPin);

void setup() {
  // Start serial communication to display sensor data
  Serial.begin(9600);

  // Initialize the DHT sensor
  dht.begin();

  // Start SoftwareSerial for GPS
  ss.begin(GPSBaud);

  // Display start message
  Serial.println("Pre Food Processing System: Sensors and GPS Initialized");
}

void loop() {
  // Reading Temperature and Humidity from DHT11
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Reading Soil Moisture
  int soilMoistureValue = analogRead(SOIL_MOISTURE_PIN);

  // Reading pH Value
  int phValue = analogRead(PH_SENSOR_PIN);
  float voltage = phValue * (5.0 / 1023.0); // Convert to voltage
  float ph = 3.5 * voltage; // pH calculation (calibration may vary)

  // Check if DHT sensor readings failed
  if (isnan(humidity) || isnan(temperature)) {
    Serial.println("Failed to read from DHT sensor!");
  } else {
    // Print DHT11 sensor data
    Serial.print("Temperature: ");
    Serial.print(temperature);
    Serial.println(" Â°C");

    Serial.print("Humidity: ");
    Serial.print(humidity);
    Serial.println(" %");
  }

  // Print Soil Moisture sensor data
  Serial.print("Soil Moisture: ");
  Serial.println(soilMoistureValue);

  // Print pH sensor data
  Serial.print("pH Value: ");
  Serial.println(ph);

  // Reading GPS Data
  while (ss.available() > 0) {
    gps.encode(ss.read());
  }

  if (gps.location.isValid()) {
    // Print GPS Location Data
    Serial.print("Latitude: ");
    Serial.println(gps.location.lat(), 6);
    Serial.print("Longitude: ");
    Serial.println(gps.location.lng(), 6);
  } else {
    Serial.println("GPS location not available");
  }

  // Wait for 2 seconds before the next reading
  delay(2000);
}
